#target indesign;try{  change_text_variables ();  var myEventListener = app.addEventListener("afterOpen",  change_text_variables, false);}catch (e) {alert (e.message + " (" + e.line + ")")};function change_text_variables ()	{	var textvars = get_variables (app.activeDocument);	var w_title = "Update text variables";	if (textvars["Journal"] !== undefined)		w_title = textvars["Journal"];	var vars_length = 0;	for (var i in textvars) vars_length++;	if (vars_length == 0) return;	var longest = 0; for (var i in textvars) longest = Math.max (longest, i.length);	var rows = 14; // number of rows in the dialog	var w = new Window ('dialog', w_title, undefined, {closeButton: false});		w.orientation = 'column'; w.alignChildren = "right"; w.maximumSize.height = 550;		var main = w.add ("group");		var p = main.add ('panel');			p.maximumSize.height = p.preferredSize.height = 450;			p.orientation = 'row'; p.alignChildren = "top"		var sbar = main.add("scrollbar {preferredSize: [20,450], minvalue: 0, maxvalue: " + (vars_length-rows) + ", jumpdelta: 10}");		var col1 = p.add ("group"); col1.orientation = "column"; col1.preferredSize.width = 100; col1.margins = 3;		var col2 = p.add ("group"); col2.orientation = "column"; col2.preferredSize.width = 300; col2.alignChildren = "fill";		var fields = {};		var start = 0, stop = rows, n = -1;		var col1_width = longest*10;		for (var i in textvars)			{			++n;			if (n >= start && n < stop)				{				col1.add ("statictext", [0,0,col1_width,20], i);				textvars[i] = setVariableValue(i, textvars[i]);				fields[n] = col2.add ("edittext", undefined, textvars[i]);				fields[n].index = i;				}			}		for (var i in fields) fields[i].onChange = function () {			textvars[this.index] = this.text;		}	var buttons = w.add ('group');		buttons.add('button', undefined, 'OK', {name: "ok"});		buttons.add ('button', undefined, 'Cancel', {name: "cancel"});	sbar.onChanging = function()		{		shift = Math.round(this.value);		if (shift <= vars_length-rows)			scroll_panel(shift);		}	function scroll_panel (start)		{		var stop = start+rows;		var n = 0; r = -1;		for (var i in textvars)			{			n++;			if (n > start && n <= stop)				{				++r;				col1.children[r].text = i;				fields[r].text = textvars[i];				fields[r].index = i;				}			}		}	if (w.show() == 2)		exit();	var v = app.activeDocument.textVariables;	for (var i in textvars)		v.item (i).variableOptions.contents = "" + textvars[i];	} // change_text_variablesfunction get_variables ()	{	var o = {};	var v = app.activeDocument.textVariables;	for (var i = 0; i < v.length; i++)		{		if (v[i].variableType == VariableTypes.customTextType)			o[v[i].name] = v[i].variableOptions.contents;		}	return o;	}// Added by me (antonhedstrom)function setVariableValue(variableName, currentValue) {	var newValue = '';	switch(variableName) {		case "SPNL Week":			newValue = pad(getWeekNumber(getPublishDate()), 2);			break;		case "SPNL Date":			newValue = formatPublishDate(getPublishDate());			break;          default:             newValue = currentValue;	}	return newValue;}// Return the date when the newsletter should be published.function getPublishDate() {  var candidateDate = new Date();  // Add a day until we reach a wednesday or sunday.  while( !(candidateDate.getDay() === 0 || candidateDate.getDay() === 3) ) {    candidateDate.setDate(candidateDate.getDate() + 1);  }  return candidateDate;}// Return week number given a date.function getWeekNumber(date) {  var d = new Date(+date);  d.setHours(0,0,0);  d.setDate(d.getDate()+4-(d.getDay()||7));  return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);}// Return a nice format for the datefunction formatPublishDate(date) {	var months = ["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"];  return date.getDate() + " " + months[date.getMonth()] + " " + date.getFullYear();}function pad(n, width, z) {  z = z || '0';  n = n + '';  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;}